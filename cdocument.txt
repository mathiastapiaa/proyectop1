
# Documentación del Sistema de Citas Médicas (C++)

---
**Proyecto académico de gestión de citas médicas.**
---

## Descripción General
Este sistema permite gestionar citas médicas de manera sencilla, robusta y profesional. Permite agendar, mostrar, buscar, cancelar citas, así como realizar y restaurar respaldos de la información. El sistema es seguro ante corrupción de archivos y errores de entrada/salida. Está orientado a la multiplataforma y prioriza la integridad de los datos.


## Estructura de Archivos
- **Cita.h / Cita.cpp**: Define la clase `Cita`, que representa una cita médica. Incluye serialización/deserialización y validaciones.
- **Paciente.h / Paciente.cpp**: Define la clase `Paciente`, que hereda de `Persona` y añade historial médico.
- **Persona.h / Persona.cpp**: Clase base para personas, con atributos como nombre, cédula y fecha de nacimiento.
- **Fecha.h / Fecha.cpp**: Manejo de fechas, validaciones, cálculo de edad y serialización.
- **Hora.h / Hora.cpp**: Manejo de horas, validaciones y serialización.
- **ListaDCircular.h**: Implementa una lista doblemente circular genérica para almacenar citas.
- **GestorCitas.h / GestorCitas.cpp**: Lógica principal del sistema, menús, validaciones, backup y restauración.
- **main.cpp**: Punto de entrada del programa. Inicializa el sistema y muestra el menú principal.
- **IngresoDatosDLL.h / IngresoDatosDLL.cpp**: DLL para ingreso seguro y validado de datos por consola (solo Windows).
- **data/citas.dat**: Archivo binario principal donde se guardan todas las citas.
- **data/citas_backup.dat**: Archivo de respaldo de las citas.


## Funcionalidades Principales
1. **Agendar cita**: Registrar una nueva cita médica para un paciente. Se valida que la fecha no sea fin de semana, feriado ni pasada.
2. **Mostrar citas**: Visualizar todas las citas programadas.
3. **Borrar cita**: Cancelar una cita existente ingresando los datos correspondientes.
4. **Buscar por cédula**: Buscar y mostrar las citas asociadas a una cédula de paciente.
5. **Realizar backup**: Crear una copia de seguridad de todas las citas en `data/citas_backup.dat`.
6. **Restaurar desde backup**: Recuperar todas las citas desde el archivo de backup si se pierde o daña el archivo principal.
7. **Salir**: Cerrar el sistema de citas médicas.
8. **Ayuda**: Mostrar una pantalla de ayuda con la descripción de todas las opciones.


## Validaciones y Seguridad
- No se permite agendar citas en fines de semana ni feriados nacionales.
- Solo se permiten fechas válidas y futuras para agendar citas.
- El sistema valida que no existan citas duplicadas para la misma cédula, fecha, hora y especialidad.
- El backup protege los datos ante pérdidas o errores. Se puede restaurar el archivo principal desde el backup.
- Todas las clases que contienen strings implementan serialización/deserialización campo a campo para evitar corrupción de datos.
- El ingreso de datos por consola es robusto ante entradas inválidas (por ejemplo, si se ingresa texto donde se espera un número).


## Estructura de Clases
- **Persona**: Contiene nombre, cédula y fecha de nacimiento. Métodos de serialización y validación de datos personales.
- **Paciente**: Hereda de Persona, agrega historial médico y métodos para manipularlo.
- **Cita**: Incluye paciente, fecha, hora, especialidad y motivo. Serialización segura y validación de duplicados.
- **Fecha**: Día, mes, año. Validaciones, cálculo de edad, serialización y comparación de fechas.
- **Hora**: Hora, minuto, segundo. Validaciones, serialización y comparación de horas.
- **ListaDCircular**: Lista doblemente circular genérica para almacenar objetos de tipo Cita.
- **GestorCitas**: Lógica de negocio, menús, backup, restauración, validaciones y control de flujo del sistema.
## Ejemplo de Uso Básico

```bash
GestorCitas.exe
```

Sigue las instrucciones del menú para agendar, mostrar, buscar o cancelar citas.

## Convenciones de Codificación
- Se utiliza C++ estándar (C++11 o superior).
- Comentarios de documentación con formato Doxygen en todas las clases y funciones públicas.
- Uso de `@param` y `@return` correctamente nombrados en los comentarios.
- Nombres de variables y métodos en notación camelCase.
- No se utilizan tildes ni caracteres especiales en los strings del sistema para evitar problemas de codificación en consola.

## Créditos y Contacto
- **Autor:** [Tu Nombre]
- **Fecha:** 2025
- **Contacto:** [Tu correo o usuario]

---
**Este proyecto es de uso académico y puede ser adaptado para otros fines educativos.**
- **ListaDCircular**: lista doblemente circular generica para almacenar citas.
- **GestorCitas**: logica de negocio, menus, backup, restauracion, validaciones.

## Archivos Binarios
- **citas.dat**: Archivo binario principal donde se guardan todas las citas.
- **citas_backup.dat**: Archivo de backup. Se puede restaurar el archivo principal desde este backup si se pierde o borra el original.

## Uso del Sistema
1. Ejecuta el programa principal (`GestorCitas.exe`).
2. Selecciona la opcion deseada del menu.
3. Sigue las instrucciones en pantalla para agendar, buscar, cancelar o restaurar citas.
4. Usa la opcion de ayuda para ver la descripcion de todas las funcionalidades.

## Notas
- El sistema no utiliza tildes ni caracteres especiales para evitar problemas de codificacion en consola.
- El backup y la restauracion son operaciones seguras y recomendadas antes de realizar cambios importantes.
- El sistema es multiplataforma, pero la integracion con DLL para ingreso de datos es especifica para Windows.

---

**Autor:** [Tu Nombre]
**Fecha:** 2025
